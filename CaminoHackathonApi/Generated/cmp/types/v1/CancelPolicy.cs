// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cmp/types/v1/cancel_policy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cmp.Types.V1 {

  /// <summary>Holder for reflection information generated from cmp/types/v1/cancel_policy.proto</summary>
  public static partial class CancelPolicyReflection {

    #region Descriptor
    /// <summary>File descriptor for cmp/types/v1/cancel_policy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CancelPolicyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBjbXAvdHlwZXMvdjEvY2FuY2VsX3BvbGljeS5wcm90bxIMY21wLnR5cGVz",
            "LnYxGiFjbXAvdHlwZXMvdjEvZGF0ZXRpbWVfcmFuZ2UucHJvdG8aGGNtcC90",
            "eXBlcy92MS9wcmljZS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFt",
            "cC5wcm90byKVAQoMQ2FuY2VsUG9saWN5EhIKCnJlZnVuZGFibGUYASABKAgS",
            "OgoWZnJlZV9jYW5jZWxsYXRpb25fdXB0bxgCIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASNQoQY2FuY2VsX3BlbmFsdGllcxgDIAMoCzIbLmNt",
            "cC50eXBlcy52MS5DYW5jZWxQZW5hbHR5IpsBCg1DYW5jZWxQZW5hbHR5EjMK",
            "DmRhdGV0aW1lX3JhbmdlGAEgASgLMhsuY21wLnR5cGVzLnYxLkRhdGVUaW1l",
            "UmFuZ2USIgoFdmFsdWUYAiABKAsyEy5jbXAudHlwZXMudjEuUHJpY2USEwoL",
            "ZGVzY3JpcHRpb24YAyABKAkSHAoUdmFsaWRfZm9yX3JhdGVfcGxhbnMYBCAD",
            "KAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Cmp.Types.V1.DatetimeRangeReflection.Descriptor, global::Cmp.Types.V1.PriceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.CancelPolicy), global::Cmp.Types.V1.CancelPolicy.Parser, new[]{ "Refundable", "FreeCancellationUpto", "CancelPenalties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.CancelPenalty), global::Cmp.Types.V1.CancelPenalty.Parser, new[]{ "DatetimeRange", "Value", "Description", "ValidForRatePlans" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Cancellation Policy: The cancellation policy section consists of 3 options:
  ///
  /// - A simple boolean for refundable or non-refundable options
  /// - A "free cancellation upto" DateTime
  /// - Complete cancellation policies with from/to DateTime stamps
  ///
  /// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/cancel_policy.proto.dot.xs.svg)
  ///
  /// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/cancel_policy.proto.dot.svg)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CancelPolicy : pb::IMessage<CancelPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelPolicy> _parser = new pb::MessageParser<CancelPolicy>(() => new CancelPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.CancelPolicyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelPolicy(CancelPolicy other) : this() {
      refundable_ = other.refundable_;
      freeCancellationUpto_ = other.freeCancellationUpto_ != null ? other.freeCancellationUpto_.Clone() : null;
      cancelPenalties_ = other.cancelPenalties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelPolicy Clone() {
      return new CancelPolicy(this);
    }

    /// <summary>Field number for the "refundable" field.</summary>
    public const int RefundableFieldNumber = 1;
    private bool refundable_;
    /// <summary>
    /// the search result is refundable or not (at least one cancellation penalty exists
    /// that provides a (partial) refund)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Refundable {
      get { return refundable_; }
      set {
        refundable_ = value;
      }
    }

    /// <summary>Field number for the "free_cancellation_upto" field.</summary>
    public const int FreeCancellationUptoFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp freeCancellationUpto_;
    /// <summary>
    /// The "free cancellation upto" identifier specifies the exact DateTime upto when
    /// this booking can be cancelled free of charge.
    ///
    /// Timestamps may be used for both off-chain and on-chain operations.
    /// For on-chain operations, only seconds are supported, and nanoseconds
    /// will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FreeCancellationUpto {
      get { return freeCancellationUpto_; }
      set {
        freeCancellationUpto_ = value;
      }
    }

    /// <summary>Field number for the "cancel_penalties" field.</summary>
    public const int CancelPenaltiesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.CancelPenalty> _repeated_cancelPenalties_codec
        = pb::FieldCodec.ForMessage(26, global::Cmp.Types.V1.CancelPenalty.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.CancelPenalty> cancelPenalties_ = new pbc::RepeatedField<global::Cmp.Types.V1.CancelPenalty>();
    /// <summary>
    /// Full cancellation policies can be complex and extensive. Inclusion in search
    /// messages should be avoided because they substantially increase the message size
    /// for each option and in general detailed cancellation information is required at
    /// a later step in the booking flow.
    ///
    /// Specify several date ranges with their penalties relative to the start
    /// date-time of the service. When in the inventory system several entries with
    /// different hours before specified, like for example 10€ from 240 hours (10 days)
    /// before consumption, 50€ from 5 days before consumption and 100€ from 24 hours
    /// before consumption, they must be computed to one uniform format of date ranges
    /// and penalties, related to the start DateTime of the service or product
    /// delivery.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.CancelPenalty> CancelPenalties {
      get { return cancelPenalties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Refundable != other.Refundable) return false;
      if (!object.Equals(FreeCancellationUpto, other.FreeCancellationUpto)) return false;
      if(!cancelPenalties_.Equals(other.cancelPenalties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Refundable != false) hash ^= Refundable.GetHashCode();
      if (freeCancellationUpto_ != null) hash ^= FreeCancellationUpto.GetHashCode();
      hash ^= cancelPenalties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Refundable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Refundable);
      }
      if (freeCancellationUpto_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FreeCancellationUpto);
      }
      cancelPenalties_.WriteTo(output, _repeated_cancelPenalties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Refundable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Refundable);
      }
      if (freeCancellationUpto_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FreeCancellationUpto);
      }
      cancelPenalties_.WriteTo(ref output, _repeated_cancelPenalties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Refundable != false) {
        size += 1 + 1;
      }
      if (freeCancellationUpto_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FreeCancellationUpto);
      }
      size += cancelPenalties_.CalculateSize(_repeated_cancelPenalties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelPolicy other) {
      if (other == null) {
        return;
      }
      if (other.Refundable != false) {
        Refundable = other.Refundable;
      }
      if (other.freeCancellationUpto_ != null) {
        if (freeCancellationUpto_ == null) {
          FreeCancellationUpto = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FreeCancellationUpto.MergeFrom(other.FreeCancellationUpto);
      }
      cancelPenalties_.Add(other.cancelPenalties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Refundable = input.ReadBool();
            break;
          }
          case 18: {
            if (freeCancellationUpto_ == null) {
              FreeCancellationUpto = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FreeCancellationUpto);
            break;
          }
          case 26: {
            cancelPenalties_.AddEntriesFrom(input, _repeated_cancelPenalties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Refundable = input.ReadBool();
            break;
          }
          case 18: {
            if (freeCancellationUpto_ == null) {
              FreeCancellationUpto = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FreeCancellationUpto);
            break;
          }
          case 26: {
            cancelPenalties_.AddEntriesFrom(ref input, _repeated_cancelPenalties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Cancellation Penalty
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CancelPenalty : pb::IMessage<CancelPenalty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelPenalty> _parser = new pb::MessageParser<CancelPenalty>(() => new CancelPenalty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelPenalty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.CancelPolicyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelPenalty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelPenalty(CancelPenalty other) : this() {
      datetimeRange_ = other.datetimeRange_ != null ? other.datetimeRange_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      description_ = other.description_;
      validForRatePlans_ = other.validForRatePlans_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelPenalty Clone() {
      return new CancelPenalty(this);
    }

    /// <summary>Field number for the "datetime_range" field.</summary>
    public const int DatetimeRangeFieldNumber = 1;
    private global::Cmp.Types.V1.DateTimeRange datetimeRange_;
    /// <summary>
    /// When this penalty is valid. Either use the start and end date of the DateTime
    /// range
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.DateTimeRange DatetimeRange {
      get { return datetimeRange_; }
      set {
        datetimeRange_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Cmp.Types.V1.Price value_;
    /// <summary>
    /// Penalty value. Percentages of the selling price are purposely not allowed for
    /// simplicity and uniformity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.Price Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of the penalty in a non computable manner. The Description should
    /// be in the language that is specified in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid_for_rate_plans" field.</summary>
    public const int ValidForRatePlansFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_validForRatePlans_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> validForRatePlans_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// For which rateplan the penalty is valid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ValidForRatePlans {
      get { return validForRatePlans_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelPenalty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelPenalty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DatetimeRange, other.DatetimeRange)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if (Description != other.Description) return false;
      if(!validForRatePlans_.Equals(other.validForRatePlans_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (datetimeRange_ != null) hash ^= DatetimeRange.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= validForRatePlans_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (datetimeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DatetimeRange);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      validForRatePlans_.WriteTo(output, _repeated_validForRatePlans_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (datetimeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DatetimeRange);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      validForRatePlans_.WriteTo(ref output, _repeated_validForRatePlans_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (datetimeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatetimeRange);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += validForRatePlans_.CalculateSize(_repeated_validForRatePlans_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelPenalty other) {
      if (other == null) {
        return;
      }
      if (other.datetimeRange_ != null) {
        if (datetimeRange_ == null) {
          DatetimeRange = new global::Cmp.Types.V1.DateTimeRange();
        }
        DatetimeRange.MergeFrom(other.DatetimeRange);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Cmp.Types.V1.Price();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      validForRatePlans_.Add(other.validForRatePlans_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (datetimeRange_ == null) {
              DatetimeRange = new global::Cmp.Types.V1.DateTimeRange();
            }
            input.ReadMessage(DatetimeRange);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Cmp.Types.V1.Price();
            }
            input.ReadMessage(Value);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            validForRatePlans_.AddEntriesFrom(input, _repeated_validForRatePlans_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (datetimeRange_ == null) {
              DatetimeRange = new global::Cmp.Types.V1.DateTimeRange();
            }
            input.ReadMessage(DatetimeRange);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Cmp.Types.V1.Price();
            }
            input.ReadMessage(Value);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            validForRatePlans_.AddEntriesFrom(ref input, _repeated_validForRatePlans_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
