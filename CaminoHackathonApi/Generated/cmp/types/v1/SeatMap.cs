// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cmp/types/v1/seat_map.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cmp.Types.V1 {

  /// <summary>Holder for reflection information generated from cmp/types/v1/seat_map.proto</summary>
  public static partial class SeatMapReflection {

    #region Descriptor
    /// <summary>File descriptor for cmp/types/v1/seat_map.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SeatMapReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtjbXAvdHlwZXMvdjEvc2VhdF9tYXAucHJvdG8SDGNtcC50eXBlcy52MRoe",
            "Y21wL3R5cGVzL3YxL2Rlc2NyaXB0aW9uLnByb3RvGhdjbXAvdHlwZXMvdjEv",
            "ZmlsZS5wcm90bxobY21wL3R5cGVzL3YxL2xhbmd1YWdlLnByb3RvGhxjbXAv",
            "dHlwZXMvdjEvbG9jYWxpemVkLnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3Jh",
            "cHBlcnMucHJvdG8iugEKBFNlYXQSCgoCaWQYASABKAkSLAoIbG9jYXRpb24Y",
            "AiABKAsyGi5jbXAudHlwZXMudjEuU2VhdExvY2F0aW9uEjkKCGZlYXR1cmVz",
            "GAMgAygLMicuY21wLnR5cGVzLnYxLkxvY2FsaXplZFNlYXRBdHRyaWJ1dGVT",
            "ZXQSPQoMcmVzdHJpY3Rpb25zGAQgAygLMicuY21wLnR5cGVzLnYxLkxvY2Fs",
            "aXplZFNlYXRBdHRyaWJ1dGVTZXQiLQoIU2VhdExpc3QSIQoFc2VhdHMYASAD",
            "KAsyEi5jbXAudHlwZXMudjEuU2VhdCLFAgoHU2VjdGlvbhIKCgJpZBgBIAEo",
            "CRIsCgVuYW1lcxgCIAMoCzIdLmNtcC50eXBlcy52MS5Mb2NhbGl6ZWRTdHJp",
            "bmcSKwoJc2VhdF9saXN0GAMgASgLMhYuY21wLnR5cGVzLnYxLlNlYXRMaXN0",
            "SAASMgoLdG90YWxfc2VhdHMYBCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZUgAEiIKBWltYWdlGAUgASgLMhMuY21wLnR5cGVzLnYxLkltYWdl",
            "EkUKFmxvY2FsaXplZF9kZXNjcmlwdGlvbnMYBiADKAsyJS5jbXAudHlwZXMu",
            "djEuTG9jYWxpemVkRGVzY3JpcHRpb25TZXQSJwoIc2VjdGlvbnMYByADKAsy",
            "FS5jbXAudHlwZXMudjEuU2VjdGlvbkILCglzZWF0X2luZm8iqQEKB1NlYXRN",
            "YXASCgoCaWQYASABKAkSJwoIc2VjdGlvbnMYAiADKAsyFS5jbXAudHlwZXMu",
            "djEuU2VjdGlvbhIiCgVpbWFnZRgDIAEoCzITLmNtcC50eXBlcy52MS5JbWFn",
            "ZRJFChZsb2NhbGl6ZWRfZGVzY3JpcHRpb25zGAQgAygLMiUuY21wLnR5cGVz",
            "LnYxLkxvY2FsaXplZERlc2NyaXB0aW9uU2V0IhwKDVNlYXRJbnZlbnRvcnkS",
            "CwoDaWRzGAEgAygJIsIBChBTZWN0aW9uSW52ZW50b3J5EgoKAmlkGAEgASgJ",
            "EjAKCXNlYXRfbGlzdBgCIAEoCzIbLmNtcC50eXBlcy52MS5TZWF0SW52ZW50",
            "b3J5SAASMQoKc2VhdF9jb3VudBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQzMlZhbHVlSAASMAoIc2VjdGlvbnMYBCADKAsyHi5jbXAudHlwZXMudjEu",
            "U2VjdGlvbkludmVudG9yeUILCglzZWF0X2luZm8iUAoQU2VhdE1hcEludmVu",
            "dG9yeRIKCgJpZBgBIAEoCRIwCghzZWN0aW9ucxgCIAMoCzIeLmNtcC50eXBl",
            "cy52MS5TZWN0aW9uSW52ZW50b3J5InsKGUxvY2FsaXplZFNlYXRBdHRyaWJ1",
            "dGVTZXQSKAoIbGFuZ3VhZ2UYASABKA4yFi5jbXAudHlwZXMudjEuTGFuZ3Vh",
            "Z2USNAoPc2VhdF9hdHRyaWJ1dGVzGAIgAygLMhsuY21wLnR5cGVzLnYxLlNl",
            "YXRBdHRyaWJ1dGUiQQoNU2VhdEF0dHJpYnV0ZRIMCgRuYW1lGAEgASgJEhMK",
            "C2Rlc2NyaXB0aW9uGAIgASgJEg0KBXZhbHVlGAMgASgFIk8KEkJpdG1hcFNl",
            "YXRMb2NhdGlvbhIkCgR0eXBlGAEgASgOMhYuY21wLnR5cGVzLnYxLkFyZWFU",
            "eXBlEhMKC2Nvb3JkaW5hdGVzGAIgAygFIiMKElZlY3RvclNlYXRMb2NhdGlv",
            "bhINCgVsYWJlbBgBIAEoCSKCAQoMU2VhdExvY2F0aW9uEjIKBnZlY3RvchgB",
            "IAEoCzIgLmNtcC50eXBlcy52MS5WZWN0b3JTZWF0TG9jYXRpb25IABIyCgZi",
            "aXRtYXAYAiABKAsyIC5jbXAudHlwZXMudjEuQml0bWFwU2VhdExvY2F0aW9u",
            "SABCCgoIbG9jYXRpb24qawoIQXJlYVR5cGUSGQoVQVJFQV9UWVBFX1VOU1BF",
            "Q0lGSUVEEAASFwoTQVJFQV9UWVBFX1JFQ1RBTkdMRRABEhQKEEFSRUFfVFlQ",
            "RV9DSVJDTEUQAhIVChFBUkVBX1RZUEVfUE9MWUdPThADYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Cmp.Types.V1.DescriptionReflection.Descriptor, global::Cmp.Types.V1.FileReflection.Descriptor, global::Cmp.Types.V1.LanguageReflection.Descriptor, global::Cmp.Types.V1.LocalizedReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Cmp.Types.V1.AreaType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.Seat), global::Cmp.Types.V1.Seat.Parser, new[]{ "Id", "Location", "Features", "Restrictions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.SeatList), global::Cmp.Types.V1.SeatList.Parser, new[]{ "Seats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.Section), global::Cmp.Types.V1.Section.Parser, new[]{ "Id", "Names", "SeatList", "TotalSeats", "Image", "LocalizedDescriptions", "Sections" }, new[]{ "SeatInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.SeatMap), global::Cmp.Types.V1.SeatMap.Parser, new[]{ "Id", "Sections", "Image", "LocalizedDescriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.SeatInventory), global::Cmp.Types.V1.SeatInventory.Parser, new[]{ "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.SectionInventory), global::Cmp.Types.V1.SectionInventory.Parser, new[]{ "Id", "SeatList", "SeatCount", "Sections" }, new[]{ "SeatInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.SeatMapInventory), global::Cmp.Types.V1.SeatMapInventory.Parser, new[]{ "Id", "Sections" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.LocalizedSeatAttributeSet), global::Cmp.Types.V1.LocalizedSeatAttributeSet.Parser, new[]{ "Language", "SeatAttributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.SeatAttribute), global::Cmp.Types.V1.SeatAttribute.Parser, new[]{ "Name", "Description", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.BitmapSeatLocation), global::Cmp.Types.V1.BitmapSeatLocation.Parser, new[]{ "Type", "Coordinates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.VectorSeatLocation), global::Cmp.Types.V1.VectorSeatLocation.Parser, new[]{ "Label" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.SeatLocation), global::Cmp.Types.V1.SeatLocation.Parser, new[]{ "Vector", "Bitmap" }, new[]{ "Location" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Enumerates the types of areas that can be defined within a seat map. This is used
  /// for specifying the shape of regions in bitmap images.
  /// </summary>
  public enum AreaType {
    [pbr::OriginalName("AREA_TYPE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("AREA_TYPE_RECTANGLE")] Rectangle = 1,
    [pbr::OriginalName("AREA_TYPE_CIRCLE")] Circle = 2,
    [pbr::OriginalName("AREA_TYPE_POLYGON")] Polygon = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Represents a basic seat with optional features and restrictions. Each seat has a
  /// unique identifier, a location within the seat map, and can have various static
  /// features and restrictions associated with it.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Seat : pb::IMessage<Seat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Seat> _parser = new pb::MessageParser<Seat>(() => new Seat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Seat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Seat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Seat(Seat other) : this() {
      id_ = other.id_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      features_ = other.features_.Clone();
      restrictions_ = other.restrictions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Seat Clone() {
      return new Seat(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Unique identifier for the seat, such as "12B" or "A26". This identifier must be
    /// unique within the section to which this seat belongs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Cmp.Types.V1.SeatLocation location_;
    /// <summary>
    /// The location of the seat within the seat map. This can be defined using either
    /// a vector (SVG) or bitmap format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.SeatLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.LocalizedSeatAttributeSet> _repeated_features_codec
        = pb::FieldCodec.ForMessage(26, global::Cmp.Types.V1.LocalizedSeatAttributeSet.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.LocalizedSeatAttributeSet> features_ = new pbc::RepeatedField<global::Cmp.Types.V1.LocalizedSeatAttributeSet>();
    /// <summary>
    /// Static features associated with the seat, such as type, amenities, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.LocalizedSeatAttributeSet> Features {
      get { return features_; }
    }

    /// <summary>Field number for the "restrictions" field.</summary>
    public const int RestrictionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.LocalizedSeatAttributeSet> _repeated_restrictions_codec
        = pb::FieldCodec.ForMessage(34, global::Cmp.Types.V1.LocalizedSeatAttributeSet.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.LocalizedSeatAttributeSet> restrictions_ = new pbc::RepeatedField<global::Cmp.Types.V1.LocalizedSeatAttributeSet>();
    /// <summary>
    /// Restrictions associated with the seat, such as age limits or accessibility requirements.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.LocalizedSeatAttributeSet> Restrictions {
      get { return restrictions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Seat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Seat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if(!features_.Equals(other.features_)) return false;
      if(!restrictions_.Equals(other.restrictions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      hash ^= features_.GetHashCode();
      hash ^= restrictions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      features_.WriteTo(output, _repeated_features_codec);
      restrictions_.WriteTo(output, _repeated_restrictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      features_.WriteTo(ref output, _repeated_features_codec);
      restrictions_.WriteTo(ref output, _repeated_restrictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      size += features_.CalculateSize(_repeated_features_codec);
      size += restrictions_.CalculateSize(_repeated_restrictions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Seat other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Cmp.Types.V1.SeatLocation();
        }
        Location.MergeFrom(other.Location);
      }
      features_.Add(other.features_);
      restrictions_.Add(other.restrictions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Cmp.Types.V1.SeatLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
          case 34: {
            restrictions_.AddEntriesFrom(input, _repeated_restrictions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Cmp.Types.V1.SeatLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            features_.AddEntriesFrom(ref input, _repeated_features_codec);
            break;
          }
          case 34: {
            restrictions_.AddEntriesFrom(ref input, _repeated_restrictions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of seats
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SeatList : pb::IMessage<SeatList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SeatList> _parser = new pb::MessageParser<SeatList>(() => new SeatList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SeatList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatList(SeatList other) : this() {
      seats_ = other.seats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatList Clone() {
      return new SeatList(this);
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.Seat> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(10, global::Cmp.Types.V1.Seat.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.Seat> seats_ = new pbc::RepeatedField<global::Cmp.Types.V1.Seat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.Seat> Seats {
      get { return seats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SeatList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SeatList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!seats_.Equals(other.seats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= seats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      seats_.WriteTo(output, _repeated_seats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      seats_.WriteTo(ref output, _repeated_seats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += seats_.CalculateSize(_repeated_seats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SeatList other) {
      if (other == null) {
        return;
      }
      seats_.Add(other.seats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Section represents a distinct area within a venue, which can be defined by
  /// various attributes. It can be a block of rows in a theater, a specific area in a
  /// concert venue such as the stage or standing area, a section of seating in a
  /// stadium, or a section in an airplane. Each Section is uniquely identified and can
  /// contain information about its seats, layout, and additional properties.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Section : pb::IMessage<Section>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Section> _parser = new pb::MessageParser<Section>(() => new Section());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Section> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Section() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Section(Section other) : this() {
      id_ = other.id_;
      names_ = other.names_.Clone();
      image_ = other.image_ != null ? other.image_.Clone() : null;
      localizedDescriptions_ = other.localizedDescriptions_.Clone();
      sections_ = other.sections_.Clone();
      switch (other.SeatInfoCase) {
        case SeatInfoOneofCase.SeatList:
          SeatList = other.SeatList.Clone();
          break;
        case SeatInfoOneofCase.TotalSeats:
          TotalSeats = other.TotalSeats;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Section Clone() {
      return new Section(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Level, section or row identifier, e.g., "Upper", "Balcony" or "Section 101",
    /// "Orchestra" or "A", "12". Must be unique for each section.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.LocalizedString> _repeated_names_codec
        = pb::FieldCodec.ForMessage(18, global::Cmp.Types.V1.LocalizedString.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.LocalizedString> names_ = new pbc::RepeatedField<global::Cmp.Types.V1.LocalizedString>();
    /// <summary>
    /// List of localized names Human readable names of the section
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.LocalizedString> Names {
      get { return names_; }
    }

    /// <summary>Field number for the "seat_list" field.</summary>
    public const int SeatListFieldNumber = 3;
    /// <summary>
    /// List of seats in this section.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.SeatList SeatList {
      get { return seatInfoCase_ == SeatInfoOneofCase.SeatList ? (global::Cmp.Types.V1.SeatList) seatInfo_ : null; }
      set {
        seatInfo_ = value;
        seatInfoCase_ = value == null ? SeatInfoOneofCase.None : SeatInfoOneofCase.SeatList;
      }
    }

    /// <summary>Field number for the "total_seats" field.</summary>
    public const int TotalSeatsFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _oneof_totalSeats_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    /// <summary>
    /// Total number of seats in this section as an integer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int? TotalSeats {
      get { return seatInfoCase_ == SeatInfoOneofCase.TotalSeats ? (int?) seatInfo_ : (int?) null; }
      set {
        seatInfo_ = value;
        seatInfoCase_ = value == null ? SeatInfoOneofCase.None : SeatInfoOneofCase.TotalSeats;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 5;
    private global::Cmp.Types.V1.Image image_;
    /// <summary>
    /// Image that provides a visual representation of the section's layout, which can
    /// be either a vector (SVG) or bitmap image.
    ///
    /// If set, it is assumed that this image is used for locating seats within the
    /// section. (the `SeatLocation` message type in the `Seat` message above is
    /// used to represent seat location inside this image).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "localized_descriptions" field.</summary>
    public const int LocalizedDescriptionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.LocalizedDescriptionSet> _repeated_localizedDescriptions_codec
        = pb::FieldCodec.ForMessage(50, global::Cmp.Types.V1.LocalizedDescriptionSet.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.LocalizedDescriptionSet> localizedDescriptions_ = new pbc::RepeatedField<global::Cmp.Types.V1.LocalizedDescriptionSet>();
    /// <summary>
    /// A list of localized descriptions for this section, useful for providing
    /// information about features and amenities in multiple languages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.LocalizedDescriptionSet> LocalizedDescriptions {
      get { return localizedDescriptions_; }
    }

    /// <summary>Field number for the "sections" field.</summary>
    public const int SectionsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.Section> _repeated_sections_codec
        = pb::FieldCodec.ForMessage(58, global::Cmp.Types.V1.Section.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.Section> sections_ = new pbc::RepeatedField<global::Cmp.Types.V1.Section>();
    /// <summary>
    /// Nested sections within this section, allowing for a hierarchical representation
    /// of the venue's layout.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.Section> Sections {
      get { return sections_; }
    }

    private object seatInfo_;
    /// <summary>Enum of possible cases for the "seat_info" oneof.</summary>
    public enum SeatInfoOneofCase {
      None = 0,
      SeatList = 3,
      TotalSeats = 4,
    }
    private SeatInfoOneofCase seatInfoCase_ = SeatInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatInfoOneofCase SeatInfoCase {
      get { return seatInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatInfo() {
      seatInfoCase_ = SeatInfoOneofCase.None;
      seatInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Section);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Section other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!names_.Equals(other.names_)) return false;
      if (!object.Equals(SeatList, other.SeatList)) return false;
      if (TotalSeats != other.TotalSeats) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if(!localizedDescriptions_.Equals(other.localizedDescriptions_)) return false;
      if(!sections_.Equals(other.sections_)) return false;
      if (SeatInfoCase != other.SeatInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= names_.GetHashCode();
      if (seatInfoCase_ == SeatInfoOneofCase.SeatList) hash ^= SeatList.GetHashCode();
      if (seatInfoCase_ == SeatInfoOneofCase.TotalSeats) hash ^= TotalSeats.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      hash ^= localizedDescriptions_.GetHashCode();
      hash ^= sections_.GetHashCode();
      hash ^= (int) seatInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      names_.WriteTo(output, _repeated_names_codec);
      if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
        output.WriteRawTag(26);
        output.WriteMessage(SeatList);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.TotalSeats) {
        _oneof_totalSeats_codec.WriteTagAndValue(output, (int?) seatInfo_);
      }
      if (image_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Image);
      }
      localizedDescriptions_.WriteTo(output, _repeated_localizedDescriptions_codec);
      sections_.WriteTo(output, _repeated_sections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      names_.WriteTo(ref output, _repeated_names_codec);
      if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
        output.WriteRawTag(26);
        output.WriteMessage(SeatList);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.TotalSeats) {
        _oneof_totalSeats_codec.WriteTagAndValue(ref output, (int?) seatInfo_);
      }
      if (image_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Image);
      }
      localizedDescriptions_.WriteTo(ref output, _repeated_localizedDescriptions_codec);
      sections_.WriteTo(ref output, _repeated_sections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += names_.CalculateSize(_repeated_names_codec);
      if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SeatList);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.TotalSeats) {
        size += _oneof_totalSeats_codec.CalculateSizeWithTag(TotalSeats);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      size += localizedDescriptions_.CalculateSize(_repeated_localizedDescriptions_codec);
      size += sections_.CalculateSize(_repeated_sections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Section other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      names_.Add(other.names_);
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Cmp.Types.V1.Image();
        }
        Image.MergeFrom(other.Image);
      }
      localizedDescriptions_.Add(other.localizedDescriptions_);
      sections_.Add(other.sections_);
      switch (other.SeatInfoCase) {
        case SeatInfoOneofCase.SeatList:
          if (SeatList == null) {
            SeatList = new global::Cmp.Types.V1.SeatList();
          }
          SeatList.MergeFrom(other.SeatList);
          break;
        case SeatInfoOneofCase.TotalSeats:
          TotalSeats = other.TotalSeats;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
          case 26: {
            global::Cmp.Types.V1.SeatList subBuilder = new global::Cmp.Types.V1.SeatList();
            if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
              subBuilder.MergeFrom(SeatList);
            }
            input.ReadMessage(subBuilder);
            SeatList = subBuilder;
            break;
          }
          case 34: {
            TotalSeats = _oneof_totalSeats_codec.Read(input);
            break;
          }
          case 42: {
            if (image_ == null) {
              Image = new global::Cmp.Types.V1.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 50: {
            localizedDescriptions_.AddEntriesFrom(input, _repeated_localizedDescriptions_codec);
            break;
          }
          case 58: {
            sections_.AddEntriesFrom(input, _repeated_sections_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            names_.AddEntriesFrom(ref input, _repeated_names_codec);
            break;
          }
          case 26: {
            global::Cmp.Types.V1.SeatList subBuilder = new global::Cmp.Types.V1.SeatList();
            if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
              subBuilder.MergeFrom(SeatList);
            }
            input.ReadMessage(subBuilder);
            SeatList = subBuilder;
            break;
          }
          case 34: {
            TotalSeats = _oneof_totalSeats_codec.Read(ref input);
            break;
          }
          case 42: {
            if (image_ == null) {
              Image = new global::Cmp.Types.V1.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 50: {
            localizedDescriptions_.AddEntriesFrom(ref input, _repeated_localizedDescriptions_codec);
            break;
          }
          case 58: {
            sections_.AddEntriesFrom(ref input, _repeated_sections_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// High-level representation of a seat map, which defines the layout and structure
  /// of seating within a venue. This message provides a comprehensive overview of the
  /// seating arrangement, including sections, images, and localized descriptions.
  ///
  /// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/seat_map.proto.dot.xs.svg)
  ///
  /// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/seat_map.proto.dot.svg)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SeatMap : pb::IMessage<SeatMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SeatMap> _parser = new pb::MessageParser<SeatMap>(() => new SeatMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SeatMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatMap(SeatMap other) : this() {
      id_ = other.id_;
      sections_ = other.sections_.Clone();
      image_ = other.image_ != null ? other.image_.Clone() : null;
      localizedDescriptions_ = other.localizedDescriptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatMap Clone() {
      return new SeatMap(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Unique identifier for the seat map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sections" field.</summary>
    public const int SectionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.Section> _repeated_sections_codec
        = pb::FieldCodec.ForMessage(18, global::Cmp.Types.V1.Section.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.Section> sections_ = new pbc::RepeatedField<global::Cmp.Types.V1.Section>();
    /// <summary>
    /// A list of sections within the seat map. Each section represents a distinct area
    /// within the venue, such as rows, sections, levels, or blocks of seats. This
    /// field is recursive, allowing for hierarchical structuring of the seating
    /// layout.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.Section> Sections {
      get { return sections_; }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    private global::Cmp.Types.V1.Image image_;
    /// <summary>
    /// Image that provides a visual representation of the seat map, illustrating the
    /// location and arrangement of seats. The image can be in vector format (SVG) or
    /// bitmap format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "localized_descriptions" field.</summary>
    public const int LocalizedDescriptionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.LocalizedDescriptionSet> _repeated_localizedDescriptions_codec
        = pb::FieldCodec.ForMessage(34, global::Cmp.Types.V1.LocalizedDescriptionSet.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.LocalizedDescriptionSet> localizedDescriptions_ = new pbc::RepeatedField<global::Cmp.Types.V1.LocalizedDescriptionSet>();
    /// <summary>
    /// A list of localized descriptions for the seat map. This can be used to describe
    /// features and amenities of the seating arrangement in multiple languages.
    /// The languages should match those requested in SeatMapRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.LocalizedDescriptionSet> LocalizedDescriptions {
      get { return localizedDescriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SeatMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SeatMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!sections_.Equals(other.sections_)) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if(!localizedDescriptions_.Equals(other.localizedDescriptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= sections_.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      hash ^= localizedDescriptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      sections_.WriteTo(output, _repeated_sections_codec);
      if (image_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Image);
      }
      localizedDescriptions_.WriteTo(output, _repeated_localizedDescriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      sections_.WriteTo(ref output, _repeated_sections_codec);
      if (image_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Image);
      }
      localizedDescriptions_.WriteTo(ref output, _repeated_localizedDescriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += sections_.CalculateSize(_repeated_sections_codec);
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      size += localizedDescriptions_.CalculateSize(_repeated_localizedDescriptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SeatMap other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      sections_.Add(other.sections_);
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Cmp.Types.V1.Image();
        }
        Image.MergeFrom(other.Image);
      }
      localizedDescriptions_.Add(other.localizedDescriptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            sections_.AddEntriesFrom(input, _repeated_sections_codec);
            break;
          }
          case 26: {
            if (image_ == null) {
              Image = new global::Cmp.Types.V1.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 34: {
            localizedDescriptions_.AddEntriesFrom(input, _repeated_localizedDescriptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            sections_.AddEntriesFrom(ref input, _repeated_sections_codec);
            break;
          }
          case 26: {
            if (image_ == null) {
              Image = new global::Cmp.Types.V1.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 34: {
            localizedDescriptions_.AddEntriesFrom(ref input, _repeated_localizedDescriptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of _only_ seat IDs to be used for seat selection or seat availability.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SeatInventory : pb::IMessage<SeatInventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SeatInventory> _parser = new pb::MessageParser<SeatInventory>(() => new SeatInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SeatInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatInventory(SeatInventory other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatInventory Clone() {
      return new SeatInventory(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of seat IDs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SeatInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SeatInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ids_.WriteTo(ref output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SeatInventory other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ids_.AddEntriesFrom(ref input, _repeated_ids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the inventory of seats for a specific section and all its inner
  /// sections. This message is used for both seat availability and seat selection
  /// purposes, providing information about either the remaining or selected seats
  /// within the section.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SectionInventory : pb::IMessage<SectionInventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SectionInventory> _parser = new pb::MessageParser<SectionInventory>(() => new SectionInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SectionInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SectionInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SectionInventory(SectionInventory other) : this() {
      id_ = other.id_;
      sections_ = other.sections_.Clone();
      switch (other.SeatInfoCase) {
        case SeatInfoOneofCase.SeatList:
          SeatList = other.SeatList.Clone();
          break;
        case SeatInfoOneofCase.SeatCount:
          SeatCount = other.SeatCount;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SectionInventory Clone() {
      return new SectionInventory(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Unique identifier for the section. Must be unique within the seat map.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seat_list" field.</summary>
    public const int SeatListFieldNumber = 2;
    /// <summary>
    /// List of individual seat IDs within this section.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.SeatInventory SeatList {
      get { return seatInfoCase_ == SeatInfoOneofCase.SeatList ? (global::Cmp.Types.V1.SeatInventory) seatInfo_ : null; }
      set {
        seatInfo_ = value;
        seatInfoCase_ = value == null ? SeatInfoOneofCase.None : SeatInfoOneofCase.SeatList;
      }
    }

    /// <summary>Field number for the "seat_count" field.</summary>
    public const int SeatCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _oneof_seatCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    /// <summary>
    /// Seat count in this section, representing either the remaining seats for
    /// availability purposes or the selected seats for seat selection messages.
    ///
    /// This field is intended for sections without individual seat details, such as
    /// standing areas at a concert or an arena.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int? SeatCount {
      get { return seatInfoCase_ == SeatInfoOneofCase.SeatCount ? (int?) seatInfo_ : (int?) null; }
      set {
        seatInfo_ = value;
        seatInfoCase_ = value == null ? SeatInfoOneofCase.None : SeatInfoOneofCase.SeatCount;
      }
    }

    /// <summary>Field number for the "sections" field.</summary>
    public const int SectionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.SectionInventory> _repeated_sections_codec
        = pb::FieldCodec.ForMessage(34, global::Cmp.Types.V1.SectionInventory.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.SectionInventory> sections_ = new pbc::RepeatedField<global::Cmp.Types.V1.SectionInventory>();
    /// <summary>
    /// Nested inner sections within this section, allowing for a hierarchical
    /// representation of seat inventory. Each inner section can have its own seat
    /// information and further nested sections.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.SectionInventory> Sections {
      get { return sections_; }
    }

    private object seatInfo_;
    /// <summary>Enum of possible cases for the "seat_info" oneof.</summary>
    public enum SeatInfoOneofCase {
      None = 0,
      SeatList = 2,
      SeatCount = 3,
    }
    private SeatInfoOneofCase seatInfoCase_ = SeatInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatInfoOneofCase SeatInfoCase {
      get { return seatInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatInfo() {
      seatInfoCase_ = SeatInfoOneofCase.None;
      seatInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SectionInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SectionInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(SeatList, other.SeatList)) return false;
      if (SeatCount != other.SeatCount) return false;
      if(!sections_.Equals(other.sections_)) return false;
      if (SeatInfoCase != other.SeatInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (seatInfoCase_ == SeatInfoOneofCase.SeatList) hash ^= SeatList.GetHashCode();
      if (seatInfoCase_ == SeatInfoOneofCase.SeatCount) hash ^= SeatCount.GetHashCode();
      hash ^= sections_.GetHashCode();
      hash ^= (int) seatInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
        output.WriteRawTag(18);
        output.WriteMessage(SeatList);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.SeatCount) {
        _oneof_seatCount_codec.WriteTagAndValue(output, (int?) seatInfo_);
      }
      sections_.WriteTo(output, _repeated_sections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
        output.WriteRawTag(18);
        output.WriteMessage(SeatList);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.SeatCount) {
        _oneof_seatCount_codec.WriteTagAndValue(ref output, (int?) seatInfo_);
      }
      sections_.WriteTo(ref output, _repeated_sections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SeatList);
      }
      if (seatInfoCase_ == SeatInfoOneofCase.SeatCount) {
        size += _oneof_seatCount_codec.CalculateSizeWithTag(SeatCount);
      }
      size += sections_.CalculateSize(_repeated_sections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SectionInventory other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      sections_.Add(other.sections_);
      switch (other.SeatInfoCase) {
        case SeatInfoOneofCase.SeatList:
          if (SeatList == null) {
            SeatList = new global::Cmp.Types.V1.SeatInventory();
          }
          SeatList.MergeFrom(other.SeatList);
          break;
        case SeatInfoOneofCase.SeatCount:
          SeatCount = other.SeatCount;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Cmp.Types.V1.SeatInventory subBuilder = new global::Cmp.Types.V1.SeatInventory();
            if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
              subBuilder.MergeFrom(SeatList);
            }
            input.ReadMessage(subBuilder);
            SeatList = subBuilder;
            break;
          }
          case 26: {
            SeatCount = _oneof_seatCount_codec.Read(input);
            break;
          }
          case 34: {
            sections_.AddEntriesFrom(input, _repeated_sections_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Cmp.Types.V1.SeatInventory subBuilder = new global::Cmp.Types.V1.SeatInventory();
            if (seatInfoCase_ == SeatInfoOneofCase.SeatList) {
              subBuilder.MergeFrom(SeatList);
            }
            input.ReadMessage(subBuilder);
            SeatList = subBuilder;
            break;
          }
          case 26: {
            SeatCount = _oneof_seatCount_codec.Read(ref input);
            break;
          }
          case 34: {
            sections_.AddEntriesFrom(ref input, _repeated_sections_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the inventory of seats for a specific seat map, used for both seat
  /// selection and seat availability purposes. This message provides a comprehensive
  /// overview of the seating inventory, including detailed information about each
  /// section and its inner sections.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SeatMapInventory : pb::IMessage<SeatMapInventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SeatMapInventory> _parser = new pb::MessageParser<SeatMapInventory>(() => new SeatMapInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SeatMapInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatMapInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatMapInventory(SeatMapInventory other) : this() {
      id_ = other.id_;
      sections_ = other.sections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatMapInventory Clone() {
      return new SeatMapInventory(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Unique identifier for the seat map that this Inventory refers to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sections" field.</summary>
    public const int SectionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.SectionInventory> _repeated_sections_codec
        = pb::FieldCodec.ForMessage(18, global::Cmp.Types.V1.SectionInventory.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.SectionInventory> sections_ = new pbc::RepeatedField<global::Cmp.Types.V1.SectionInventory>();
    /// <summary>
    /// A list of seat inventories for each section within the seat map. This field
    /// includes detailed seat information and supports nested sections, allowing for a
    /// hierarchical representation of the seating arrangement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.SectionInventory> Sections {
      get { return sections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SeatMapInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SeatMapInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!sections_.Equals(other.sections_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= sections_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      sections_.WriteTo(output, _repeated_sections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      sections_.WriteTo(ref output, _repeated_sections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += sections_.CalculateSize(_repeated_sections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SeatMapInventory other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      sections_.Add(other.sections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            sections_.AddEntriesFrom(input, _repeated_sections_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            sections_.AddEntriesFrom(ref input, _repeated_sections_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalizedSeatAttributeSet : pb::IMessage<LocalizedSeatAttributeSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalizedSeatAttributeSet> _parser = new pb::MessageParser<LocalizedSeatAttributeSet>(() => new LocalizedSeatAttributeSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalizedSeatAttributeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalizedSeatAttributeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalizedSeatAttributeSet(LocalizedSeatAttributeSet other) : this() {
      language_ = other.language_;
      seatAttributes_ = other.seatAttributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalizedSeatAttributeSet Clone() {
      return new LocalizedSeatAttributeSet(this);
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 1;
    private global::Cmp.Types.V1.Language language_ = global::Cmp.Types.V1.Language.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.Language Language {
      get { return language_; }
      set {
        language_ = value;
      }
    }

    /// <summary>Field number for the "seat_attributes" field.</summary>
    public const int SeatAttributesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.SeatAttribute> _repeated_seatAttributes_codec
        = pb::FieldCodec.ForMessage(18, global::Cmp.Types.V1.SeatAttribute.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.SeatAttribute> seatAttributes_ = new pbc::RepeatedField<global::Cmp.Types.V1.SeatAttribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.SeatAttribute> SeatAttributes {
      get { return seatAttributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalizedSeatAttributeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalizedSeatAttributeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Language != other.Language) return false;
      if(!seatAttributes_.Equals(other.seatAttributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Language != global::Cmp.Types.V1.Language.Unspecified) hash ^= Language.GetHashCode();
      hash ^= seatAttributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Language != global::Cmp.Types.V1.Language.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Language);
      }
      seatAttributes_.WriteTo(output, _repeated_seatAttributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Language != global::Cmp.Types.V1.Language.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Language);
      }
      seatAttributes_.WriteTo(ref output, _repeated_seatAttributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Language != global::Cmp.Types.V1.Language.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Language);
      }
      size += seatAttributes_.CalculateSize(_repeated_seatAttributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalizedSeatAttributeSet other) {
      if (other == null) {
        return;
      }
      if (other.Language != global::Cmp.Types.V1.Language.Unspecified) {
        Language = other.Language;
      }
      seatAttributes_.Add(other.seatAttributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Language = (global::Cmp.Types.V1.Language) input.ReadEnum();
            break;
          }
          case 18: {
            seatAttributes_.AddEntriesFrom(input, _repeated_seatAttributes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Language = (global::Cmp.Types.V1.Language) input.ReadEnum();
            break;
          }
          case 18: {
            seatAttributes_.AddEntriesFrom(ref input, _repeated_seatAttributes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines a static attribute for a seat, which can be used for specifying features
  /// and restrictions. Attributes include a name, a human-readable description, and a
  /// value that can be used for various conditions or restrictions.
  ///
  /// FIXME: Can we make this a big enum?
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SeatAttribute : pb::IMessage<SeatAttribute>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SeatAttribute> _parser = new pb::MessageParser<SeatAttribute>(() => new SeatAttribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SeatAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatAttribute(SeatAttribute other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatAttribute Clone() {
      return new SeatAttribute(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the attribute, used to identify the feature or restriction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Human-readable description of the attribute, providing more details about its purpose.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private int value_;
    /// <summary>
    /// Integer value associated with the attribute, which can be used for conditions
    /// or restrictions, such as "min_age".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SeatAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SeatAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Value != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Value != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SeatAttribute other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines the location of a seat within a bitmap image seat map. This information
  /// is generally used with the HTML `area` tag to specify clickable regions.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BitmapSeatLocation : pb::IMessage<BitmapSeatLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BitmapSeatLocation> _parser = new pb::MessageParser<BitmapSeatLocation>(() => new BitmapSeatLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BitmapSeatLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BitmapSeatLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BitmapSeatLocation(BitmapSeatLocation other) : this() {
      type_ = other.type_;
      coordinates_ = other.coordinates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BitmapSeatLocation Clone() {
      return new BitmapSeatLocation(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Cmp.Types.V1.AreaType type_ = global::Cmp.Types.V1.AreaType.Unspecified;
    /// <summary>
    /// The type of area defining the seat location, such as rectangle, circle, or polygon.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.AreaType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "coordinates" field.</summary>
    public const int CoordinatesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_coordinates_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> coordinates_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Coordinates defining the area. The format of the coordinates depends on the
    /// area type (e.g., top-left (x1,y1) and bottom-right (x2,y2) corners for a
    /// rectangle: `&lt;area shape="rect" coords="x1,y1,x2,y2"`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Coordinates {
      get { return coordinates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BitmapSeatLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BitmapSeatLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!coordinates_.Equals(other.coordinates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Cmp.Types.V1.AreaType.Unspecified) hash ^= Type.GetHashCode();
      hash ^= coordinates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Cmp.Types.V1.AreaType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      coordinates_.WriteTo(output, _repeated_coordinates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Cmp.Types.V1.AreaType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      coordinates_.WriteTo(ref output, _repeated_coordinates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Cmp.Types.V1.AreaType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += coordinates_.CalculateSize(_repeated_coordinates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BitmapSeatLocation other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Cmp.Types.V1.AreaType.Unspecified) {
        Type = other.Type;
      }
      coordinates_.Add(other.coordinates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Cmp.Types.V1.AreaType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            coordinates_.AddEntriesFrom(input, _repeated_coordinates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Cmp.Types.V1.AreaType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            coordinates_.AddEntriesFrom(ref input, _repeated_coordinates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines the location of a seat within an SVG (vector) seat map. This is typically
  /// used for labeling elements within the SVG.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VectorSeatLocation : pb::IMessage<VectorSeatLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VectorSeatLocation> _parser = new pb::MessageParser<VectorSeatLocation>(() => new VectorSeatLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VectorSeatLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorSeatLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorSeatLocation(VectorSeatLocation other) : this() {
      label_ = other.label_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorSeatLocation Clone() {
      return new VectorSeatLocation(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    /// <summary>
    /// Label for the seat location in the SVG, e.g., "section-TERRACE-26-34-2-label".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VectorSeatLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VectorSeatLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VectorSeatLocation other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the location of a seat within a seat map, which can be defined using
  /// either a vector (SVG) or bitmap format. This message encapsulates both types of
  /// seat location definitions.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SeatLocation : pb::IMessage<SeatLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SeatLocation> _parser = new pb::MessageParser<SeatLocation>(() => new SeatLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SeatLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.SeatMapReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatLocation(SeatLocation other) : this() {
      switch (other.LocationCase) {
        case LocationOneofCase.Vector:
          Vector = other.Vector.Clone();
          break;
        case LocationOneofCase.Bitmap:
          Bitmap = other.Bitmap.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatLocation Clone() {
      return new SeatLocation(this);
    }

    /// <summary>Field number for the "vector" field.</summary>
    public const int VectorFieldNumber = 1;
    /// <summary>
    /// Vector-based seat location, used for SVG maps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.VectorSeatLocation Vector {
      get { return locationCase_ == LocationOneofCase.Vector ? (global::Cmp.Types.V1.VectorSeatLocation) location_ : null; }
      set {
        location_ = value;
        locationCase_ = value == null ? LocationOneofCase.None : LocationOneofCase.Vector;
      }
    }

    /// <summary>Field number for the "bitmap" field.</summary>
    public const int BitmapFieldNumber = 2;
    /// <summary>
    /// Bitmap-based seat location, used for HTML image maps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.BitmapSeatLocation Bitmap {
      get { return locationCase_ == LocationOneofCase.Bitmap ? (global::Cmp.Types.V1.BitmapSeatLocation) location_ : null; }
      set {
        location_ = value;
        locationCase_ = value == null ? LocationOneofCase.None : LocationOneofCase.Bitmap;
      }
    }

    private object location_;
    /// <summary>Enum of possible cases for the "location" oneof.</summary>
    public enum LocationOneofCase {
      None = 0,
      Vector = 1,
      Bitmap = 2,
    }
    private LocationOneofCase locationCase_ = LocationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationOneofCase LocationCase {
      get { return locationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocation() {
      locationCase_ = LocationOneofCase.None;
      location_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SeatLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SeatLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Vector, other.Vector)) return false;
      if (!object.Equals(Bitmap, other.Bitmap)) return false;
      if (LocationCase != other.LocationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (locationCase_ == LocationOneofCase.Vector) hash ^= Vector.GetHashCode();
      if (locationCase_ == LocationOneofCase.Bitmap) hash ^= Bitmap.GetHashCode();
      hash ^= (int) locationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (locationCase_ == LocationOneofCase.Vector) {
        output.WriteRawTag(10);
        output.WriteMessage(Vector);
      }
      if (locationCase_ == LocationOneofCase.Bitmap) {
        output.WriteRawTag(18);
        output.WriteMessage(Bitmap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (locationCase_ == LocationOneofCase.Vector) {
        output.WriteRawTag(10);
        output.WriteMessage(Vector);
      }
      if (locationCase_ == LocationOneofCase.Bitmap) {
        output.WriteRawTag(18);
        output.WriteMessage(Bitmap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (locationCase_ == LocationOneofCase.Vector) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector);
      }
      if (locationCase_ == LocationOneofCase.Bitmap) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bitmap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SeatLocation other) {
      if (other == null) {
        return;
      }
      switch (other.LocationCase) {
        case LocationOneofCase.Vector:
          if (Vector == null) {
            Vector = new global::Cmp.Types.V1.VectorSeatLocation();
          }
          Vector.MergeFrom(other.Vector);
          break;
        case LocationOneofCase.Bitmap:
          if (Bitmap == null) {
            Bitmap = new global::Cmp.Types.V1.BitmapSeatLocation();
          }
          Bitmap.MergeFrom(other.Bitmap);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cmp.Types.V1.VectorSeatLocation subBuilder = new global::Cmp.Types.V1.VectorSeatLocation();
            if (locationCase_ == LocationOneofCase.Vector) {
              subBuilder.MergeFrom(Vector);
            }
            input.ReadMessage(subBuilder);
            Vector = subBuilder;
            break;
          }
          case 18: {
            global::Cmp.Types.V1.BitmapSeatLocation subBuilder = new global::Cmp.Types.V1.BitmapSeatLocation();
            if (locationCase_ == LocationOneofCase.Bitmap) {
              subBuilder.MergeFrom(Bitmap);
            }
            input.ReadMessage(subBuilder);
            Bitmap = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Cmp.Types.V1.VectorSeatLocation subBuilder = new global::Cmp.Types.V1.VectorSeatLocation();
            if (locationCase_ == LocationOneofCase.Vector) {
              subBuilder.MergeFrom(Vector);
            }
            input.ReadMessage(subBuilder);
            Vector = subBuilder;
            break;
          }
          case 18: {
            global::Cmp.Types.V1.BitmapSeatLocation subBuilder = new global::Cmp.Types.V1.BitmapSeatLocation();
            if (locationCase_ == LocationOneofCase.Bitmap) {
              subBuilder.MergeFrom(Bitmap);
            }
            input.ReadMessage(subBuilder);
            Bitmap = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
