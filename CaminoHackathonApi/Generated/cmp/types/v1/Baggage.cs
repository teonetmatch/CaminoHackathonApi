// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cmp/types/v1/baggage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cmp.Types.V1 {

  /// <summary>Holder for reflection information generated from cmp/types/v1/baggage.proto</summary>
  public static partial class BaggageReflection {

    #region Descriptor
    /// <summary>File descriptor for cmp/types/v1/baggage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BaggageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpjbXAvdHlwZXMvdjEvYmFnZ2FnZS5wcm90bxIMY21wLnR5cGVzLnYxGh5j",
            "bXAvdHlwZXMvdjEvbWVhc3VyZW1lbnQucHJvdG8itQEKB0JhZ2dhZ2USJwoE",
            "dHlwZRgBIAEoDjIZLmNtcC50eXBlcy52MS5CYWdnYWdlVHlwZRIRCgltYXhf",
            "Y291bnQYAiABKAUSKAoKbWF4X3dlaWdodBgDIAEoCzIULmNtcC50eXBlcy52",
            "MS5XZWlnaHQSLgoNbWF4X2RpbWVuc2lvbhgEIAEoCzIXLmNtcC50eXBlcy52",
            "MS5EaW1lbnNpb24SFAoMdHJhdmVsbGVyX2lkGAUgASgFKocCCgtCYWdnYWdl",
            "VHlwZRIcChhCQUdHQUdFX1RZUEVfVU5TUEVDSUZJRUQQABIZChVCQUdHQUdF",
            "X1RZUEVfQ0FSUllfT04QARIiCh5CQUdHQUdFX1RZUEVfQ0FSUllfT05fT1ZF",
            "UkhFQUQQAhIiCh5CQUdHQUdFX1RZUEVfQ0FSUllfT05fUEVSU09OQUwQAxIY",
            "ChRCQUdHQUdFX1RZUEVfQ0hFQ0tFRBAEEhkKFUJBR0dBR0VfVFlQRV9PRERf",
            "U0laRRAFEhQKEEJBR0dBR0VfVFlQRV9TS0kQBhIVChFCQUdHQUdFX1RZUEVf",
            "R09MRhAHEhUKEUJBR0dBR0VfVFlQRV9TVVJGEAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Cmp.Types.V1.MeasurementReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Cmp.Types.V1.BaggageType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.Baggage), global::Cmp.Types.V1.Baggage.Parser, new[]{ "Type", "MaxCount", "MaxWeight", "MaxDimension", "TravellerId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Baggage type ENUM type
  /// </summary>
  public enum BaggageType {
    /// <summary>
    /// No Baggage type specified
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Carry-on
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_CARRY_ON")] CarryOn = 1,
    /// <summary>
    /// Carry-on overhead
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_CARRY_ON_OVERHEAD")] CarryOnOverhead = 2,
    /// <summary>
    /// Carry-on personal item
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_CARRY_ON_PERSONAL")] CarryOnPersonal = 3,
    /// <summary>
    /// Checked
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_CHECKED")] Checked = 4,
    /// <summary>
    /// Odd size checked baggage
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_ODD_SIZE")] OddSize = 5,
    /// <summary>
    /// Skis
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_SKI")] Ski = 6,
    /// <summary>
    /// Golf bags
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_GOLF")] Golf = 7,
    /// <summary>
    /// (wind)Surf or Kite boards
    /// </summary>
    [pbr::OriginalName("BAGGAGE_TYPE_SURF")] Surf = 8,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Baggage message type
  ///
  /// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/baggage.proto.dot.xs.svg)
  ///
  /// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/baggage.proto.dot.svg)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Baggage : pb::IMessage<Baggage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Baggage> _parser = new pb::MessageParser<Baggage>(() => new Baggage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Baggage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.BaggageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Baggage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Baggage(Baggage other) : this() {
      type_ = other.type_;
      maxCount_ = other.maxCount_;
      maxWeight_ = other.maxWeight_ != null ? other.maxWeight_.Clone() : null;
      maxDimension_ = other.maxDimension_ != null ? other.maxDimension_.Clone() : null;
      travellerId_ = other.travellerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Baggage Clone() {
      return new Baggage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Cmp.Types.V1.BaggageType type_ = global::Cmp.Types.V1.BaggageType.Unspecified;
    /// <summary>
    /// Baggage type
    ///
    /// Enum of allowed baggage types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.BaggageType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "max_count" field.</summary>
    public const int MaxCountFieldNumber = 2;
    private int maxCount_;
    /// <summary>
    /// Maximum number of the specified baggage count allowed for this type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "max_weight" field.</summary>
    public const int MaxWeightFieldNumber = 3;
    private global::Cmp.Types.V1.Weight maxWeight_;
    /// <summary>
    /// Maximum weight of each of the specified baggage type allowed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.Weight MaxWeight {
      get { return maxWeight_; }
      set {
        maxWeight_ = value;
      }
    }

    /// <summary>Field number for the "max_dimension" field.</summary>
    public const int MaxDimensionFieldNumber = 4;
    private global::Cmp.Types.V1.Dimension maxDimension_;
    /// <summary>
    /// Maximum length, width and height of the specified bagage type allowed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.Dimension MaxDimension {
      get { return maxDimension_; }
      set {
        maxDimension_ = value;
      }
    }

    /// <summary>Field number for the "traveller_id" field.</summary>
    public const int TravellerIdFieldNumber = 5;
    private int travellerId_;
    /// <summary>
    /// traveller ID to specify the various types of baggage for each of participants
    /// of a trip. If there is just a total of different types of baggage, then it is
    /// the total for the booking and not specific to each participant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TravellerId {
      get { return travellerId_; }
      set {
        travellerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Baggage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Baggage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (MaxCount != other.MaxCount) return false;
      if (!object.Equals(MaxWeight, other.MaxWeight)) return false;
      if (!object.Equals(MaxDimension, other.MaxDimension)) return false;
      if (TravellerId != other.TravellerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Cmp.Types.V1.BaggageType.Unspecified) hash ^= Type.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (maxWeight_ != null) hash ^= MaxWeight.GetHashCode();
      if (maxDimension_ != null) hash ^= MaxDimension.GetHashCode();
      if (TravellerId != 0) hash ^= TravellerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Cmp.Types.V1.BaggageType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxCount);
      }
      if (maxWeight_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MaxWeight);
      }
      if (maxDimension_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MaxDimension);
      }
      if (TravellerId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TravellerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Cmp.Types.V1.BaggageType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxCount);
      }
      if (maxWeight_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MaxWeight);
      }
      if (maxDimension_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MaxDimension);
      }
      if (TravellerId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TravellerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Cmp.Types.V1.BaggageType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (maxWeight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxWeight);
      }
      if (maxDimension_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxDimension);
      }
      if (TravellerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TravellerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Baggage other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Cmp.Types.V1.BaggageType.Unspecified) {
        Type = other.Type;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.maxWeight_ != null) {
        if (maxWeight_ == null) {
          MaxWeight = new global::Cmp.Types.V1.Weight();
        }
        MaxWeight.MergeFrom(other.MaxWeight);
      }
      if (other.maxDimension_ != null) {
        if (maxDimension_ == null) {
          MaxDimension = new global::Cmp.Types.V1.Dimension();
        }
        MaxDimension.MergeFrom(other.MaxDimension);
      }
      if (other.TravellerId != 0) {
        TravellerId = other.TravellerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Cmp.Types.V1.BaggageType) input.ReadEnum();
            break;
          }
          case 16: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 26: {
            if (maxWeight_ == null) {
              MaxWeight = new global::Cmp.Types.V1.Weight();
            }
            input.ReadMessage(MaxWeight);
            break;
          }
          case 34: {
            if (maxDimension_ == null) {
              MaxDimension = new global::Cmp.Types.V1.Dimension();
            }
            input.ReadMessage(MaxDimension);
            break;
          }
          case 40: {
            TravellerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Cmp.Types.V1.BaggageType) input.ReadEnum();
            break;
          }
          case 16: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 26: {
            if (maxWeight_ == null) {
              MaxWeight = new global::Cmp.Types.V1.Weight();
            }
            input.ReadMessage(MaxWeight);
            break;
          }
          case 34: {
            if (maxDimension_ == null) {
              MaxDimension = new global::Cmp.Types.V1.Dimension();
            }
            input.ReadMessage(MaxDimension);
            break;
          }
          case 40: {
            TravellerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
