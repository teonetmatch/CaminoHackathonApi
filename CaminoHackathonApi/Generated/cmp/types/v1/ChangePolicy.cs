// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cmp/types/v1/change_policy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cmp.Types.V1 {

  /// <summary>Holder for reflection information generated from cmp/types/v1/change_policy.proto</summary>
  public static partial class ChangePolicyReflection {

    #region Descriptor
    /// <summary>File descriptor for cmp/types/v1/change_policy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChangePolicyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBjbXAvdHlwZXMvdjEvY2hhbmdlX3BvbGljeS5wcm90bxIMY21wLnR5cGVz",
            "LnYxGiFjbXAvdHlwZXMvdjEvZGF0ZXRpbWVfcmFuZ2UucHJvdG8aGGNtcC90",
            "eXBlcy92MS9wcmljZS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFt",
            "cC5wcm90byKMAQoMQ2hhbmdlUG9saWN5EhYKDmNoYW5nZV9hbGxvd2VkGAEg",
            "ASgIEjQKEGZyZWVfY2hhbmdlX3VwdG8YAiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEi4KDGNoYW5nZV90eXBlcxgDIAMoCzIYLmNtcC50eXBl",
            "cy52MS5DaGFuZ2VUeXBlIqYBCgpDaGFuZ2VUeXBlEgwKBGNvZGUYASABKAkS",
            "MwoOZGF0ZXRpbWVfcmFuZ2UYAiABKAsyGy5jbXAudHlwZXMudjEuRGF0ZVRp",
            "bWVSYW5nZRIiCgV2YWx1ZRgDIAEoCzITLmNtcC50eXBlcy52MS5QcmljZRIT",
            "CgtkZXNjcmlwdGlvbhgEIAEoCRIcChR2YWxpZF9mb3JfcmF0ZV9wbGFucxgF",
            "IAMoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Cmp.Types.V1.DatetimeRangeReflection.Descriptor, global::Cmp.Types.V1.PriceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.ChangePolicy), global::Cmp.Types.V1.ChangePolicy.Parser, new[]{ "ChangeAllowed", "FreeChangeUpto", "ChangeTypes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cmp.Types.V1.ChangeType), global::Cmp.Types.V1.ChangeType.Parser, new[]{ "Code", "DatetimeRange", "Value", "Description", "ValidForRatePlans" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Change Policy: The change policy section consists of 3 options:
  ///
  /// - A simple boolean for changable or non-changable search results
  /// - A "free change upto" DateTime for a search result
  /// - Multiple change types with start/end DateTime stamps for a search result
  ///
  /// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/change_policy.proto.dot.xs.svg)
  ///
  /// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/change_policy.proto.dot.svg)
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChangePolicy : pb::IMessage<ChangePolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangePolicy> _parser = new pb::MessageParser<ChangePolicy>(() => new ChangePolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChangePolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.ChangePolicyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangePolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangePolicy(ChangePolicy other) : this() {
      changeAllowed_ = other.changeAllowed_;
      freeChangeUpto_ = other.freeChangeUpto_ != null ? other.freeChangeUpto_.Clone() : null;
      changeTypes_ = other.changeTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangePolicy Clone() {
      return new ChangePolicy(this);
    }

    /// <summary>Field number for the "change_allowed" field.</summary>
    public const int ChangeAllowedFieldNumber = 1;
    private bool changeAllowed_;
    /// <summary>
    /// the search result is changeable or not (at least one change type exists)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ChangeAllowed {
      get { return changeAllowed_; }
      set {
        changeAllowed_ = value;
      }
    }

    /// <summary>Field number for the "free_change_upto" field.</summary>
    public const int FreeChangeUptoFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp freeChangeUpto_;
    /// <summary>
    /// The "free change upto" identifier specifies the exact DateTime upto when
    /// this search result can be changed free of charge.
    ///
    /// Timestamps may be used for both off-chain and on-chain operations.
    /// For on-chain operations, only seconds are supported, and nanoseconds
    /// will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FreeChangeUpto {
      get { return freeChangeUpto_; }
      set {
        freeChangeUpto_ = value;
      }
    }

    /// <summary>Field number for the "change_types" field.</summary>
    public const int ChangeTypesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Cmp.Types.V1.ChangeType> _repeated_changeTypes_codec
        = pb::FieldCodec.ForMessage(26, global::Cmp.Types.V1.ChangeType.Parser);
    private readonly pbc::RepeatedField<global::Cmp.Types.V1.ChangeType> changeTypes_ = new pbc::RepeatedField<global::Cmp.Types.V1.ChangeType>();
    /// <summary>
    /// Full change policies can be complex and extensive. Inclusion in search
    /// messages should be avoided because they substantially increase the message size
    /// for each option and in general detailed cancellation information is required at
    /// a later step in the booking flow.
    ///
    /// Specify several change types with their change fee relative to the start
    /// date-time of the service. When in the inventory system several entries with
    /// different hours before specified, like for example 10€ from 240 hours (10 days)
    /// before consumption, 50€ from 5 days before consumption and 100€ from 24 hours
    /// before consumption, they must be computed to one uniform format of date ranges
    /// and fees, related to the start DateTime of the service or product
    /// delivery.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Cmp.Types.V1.ChangeType> ChangeTypes {
      get { return changeTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChangePolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChangePolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChangeAllowed != other.ChangeAllowed) return false;
      if (!object.Equals(FreeChangeUpto, other.FreeChangeUpto)) return false;
      if(!changeTypes_.Equals(other.changeTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ChangeAllowed != false) hash ^= ChangeAllowed.GetHashCode();
      if (freeChangeUpto_ != null) hash ^= FreeChangeUpto.GetHashCode();
      hash ^= changeTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChangeAllowed != false) {
        output.WriteRawTag(8);
        output.WriteBool(ChangeAllowed);
      }
      if (freeChangeUpto_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FreeChangeUpto);
      }
      changeTypes_.WriteTo(output, _repeated_changeTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChangeAllowed != false) {
        output.WriteRawTag(8);
        output.WriteBool(ChangeAllowed);
      }
      if (freeChangeUpto_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FreeChangeUpto);
      }
      changeTypes_.WriteTo(ref output, _repeated_changeTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ChangeAllowed != false) {
        size += 1 + 1;
      }
      if (freeChangeUpto_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FreeChangeUpto);
      }
      size += changeTypes_.CalculateSize(_repeated_changeTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChangePolicy other) {
      if (other == null) {
        return;
      }
      if (other.ChangeAllowed != false) {
        ChangeAllowed = other.ChangeAllowed;
      }
      if (other.freeChangeUpto_ != null) {
        if (freeChangeUpto_ == null) {
          FreeChangeUpto = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FreeChangeUpto.MergeFrom(other.FreeChangeUpto);
      }
      changeTypes_.Add(other.changeTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChangeAllowed = input.ReadBool();
            break;
          }
          case 18: {
            if (freeChangeUpto_ == null) {
              FreeChangeUpto = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FreeChangeUpto);
            break;
          }
          case 26: {
            changeTypes_.AddEntriesFrom(input, _repeated_changeTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChangeAllowed = input.ReadBool();
            break;
          }
          case 18: {
            if (freeChangeUpto_ == null) {
              FreeChangeUpto = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FreeChangeUpto);
            break;
          }
          case 26: {
            changeTypes_.AddEntriesFrom(ref input, _repeated_changeTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ChangeTypes Different change types can be defined depending on what part of a
  /// travel booking requires to be changed (like for example the common "name change",
  /// "date change" or the change of a service booked to another service). Each of these
  /// changes can be possible or not in relation to the time until the service is
  /// delivered or the cost of the change may vary closer to the delivery of the
  /// service.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChangeType : pb::IMessage<ChangeType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangeType> _parser = new pb::MessageParser<ChangeType>(() => new ChangeType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChangeType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cmp.Types.V1.ChangePolicyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeType(ChangeType other) : this() {
      code_ = other.code_;
      datetimeRange_ = other.datetimeRange_ != null ? other.datetimeRange_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      description_ = other.description_;
      validForRatePlans_ = other.validForRatePlans_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeType Clone() {
      return new ChangeType(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    /// <summary>
    /// Change type code in case the change type has a specific code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "datetime_range" field.</summary>
    public const int DatetimeRangeFieldNumber = 2;
    private global::Cmp.Types.V1.DateTimeRange datetimeRange_;
    /// <summary>
    /// When this change type and date is valid. Either use the start and end date of
    /// the DateTime range
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.DateTimeRange DatetimeRange {
      get { return datetimeRange_; }
      set {
        datetimeRange_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private global::Cmp.Types.V1.Price value_;
    /// <summary>
    /// change fee. Percentages of the selling price are purposely not allowed for
    /// simplicity and uniformity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Cmp.Types.V1.Price Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the change in a non computable manner. The Description should be
    /// in the language that is specified in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid_for_rate_plans" field.</summary>
    public const int ValidForRatePlansFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_validForRatePlans_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> validForRatePlans_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// For which rateplan the policy is valid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ValidForRatePlans {
      get { return validForRatePlans_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChangeType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChangeType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(DatetimeRange, other.DatetimeRange)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if (Description != other.Description) return false;
      if(!validForRatePlans_.Equals(other.validForRatePlans_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (datetimeRange_ != null) hash ^= DatetimeRange.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= validForRatePlans_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (datetimeRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DatetimeRange);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      validForRatePlans_.WriteTo(output, _repeated_validForRatePlans_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (datetimeRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DatetimeRange);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      validForRatePlans_.WriteTo(ref output, _repeated_validForRatePlans_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (datetimeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatetimeRange);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += validForRatePlans_.CalculateSize(_repeated_validForRatePlans_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChangeType other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.datetimeRange_ != null) {
        if (datetimeRange_ == null) {
          DatetimeRange = new global::Cmp.Types.V1.DateTimeRange();
        }
        DatetimeRange.MergeFrom(other.DatetimeRange);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Cmp.Types.V1.Price();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      validForRatePlans_.Add(other.validForRatePlans_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            if (datetimeRange_ == null) {
              DatetimeRange = new global::Cmp.Types.V1.DateTimeRange();
            }
            input.ReadMessage(DatetimeRange);
            break;
          }
          case 26: {
            if (value_ == null) {
              Value = new global::Cmp.Types.V1.Price();
            }
            input.ReadMessage(Value);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            validForRatePlans_.AddEntriesFrom(input, _repeated_validForRatePlans_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            if (datetimeRange_ == null) {
              DatetimeRange = new global::Cmp.Types.V1.DateTimeRange();
            }
            input.ReadMessage(DatetimeRange);
            break;
          }
          case 26: {
            if (value_ == null) {
              Value = new global::Cmp.Types.V1.Price();
            }
            input.ReadMessage(Value);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            validForRatePlans_.AddEntriesFrom(ref input, _repeated_validForRatePlans_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
