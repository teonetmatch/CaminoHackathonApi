syntax = "proto3";

package cmp.types.v1;

import "cmp/types/v1/contact_info.proto";
import "cmp/types/v1/country.proto";
import "cmp/types/v1/date.proto";
import "cmp/types/v1/document.proto";

// Traveller
//
// ![Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/traveller.proto.dot.xs.svg)
//
// [Open Message Diagram](https://storage.googleapis.com/docs-cmp-files/diagrams/proto/cmp/types/v1/traveller.proto.dot.svg)
message BasicTraveller {
  // Guest number, the lowest number is the lead-pax. This ID is also used for
  // referencing services linked to specific participants, like baggage.
  // the traveller_id must be kept consistent between the search request and response.
  // Conclusively if the request specifies traveller 0 and 1, then the response also refers
  // to these traveller numbers. If the request specifies 1 and 2 or 10 and 20, then the
  // response also returns these references.
  // The traveller_id is specified in each unit and only detailed once in the search response
  // repeated travellers field
  int32 traveller_id = 1;

  // Traveller type from enum below
  cmp.types.v1.TravellerType type = 2;

  // Birthdate
  cmp.types.v1.Date birthdate = 3;

  // The country code for the nationality of the traveller.
  cmp.types.v1.Country nationality = 4;
}

// Traveller Type
enum TravellerType {
  TRAVELLER_TYPE_UNSPECIFIED = 0;
  TRAVELLER_TYPE_ADULT = 1;
  TRAVELLER_TYPE_CHILD = 2;
  TRAVELLER_TYPE_INFANT = 3;
  TRAVELLER_TYPE_SENIOR = 4;
}

message ExtensiveTraveller {
  // Guest number. The lowest number is the lead-pax. This ID is also used for
  // referencing services linked to specific participants, such as baggage.
  int32 traveller_id = 1;

  // Gender, as defined by the enum below.
  cmp.types.v1.GenderType gender = 2;

  // Many systems use a single field each for all first names and surnames.
  // However, many countries have multiple given names and family names, and certain
  // authorities require the names to be registered exactly as they appear in the
  // traveller's passport.
  //
  // For example, a traveller might have "Diana Frances" as the first name and
  // "Spencer" as the surname, or "Winnie" as the first name and "Madikizela-Mandela"
  // as the surname (i.e. a double-barrelled surname). In Spanish naming traditions,
  // it is common to have two surnames: one from the father and one from the mother,
  // as in "Julio Iglesias de la Cueva" and "Enrique Iglesias Preysler". To handle
  // these variations, multiple entries are allowed. Systems with a fixed number of
  // fields may use the first entry for one component and the second entry for the other.
  // For example for full name "John Roger Stephens Legend":
  //    first_names: ["John",  "Roger"]
  //    surnames: ["Stephens", "Legend"]
  repeated string first_names = 3;
  repeated string surnames = 4;
  cmp.types.v1.ContactInfo contact_info = 5;
  repeated cmp.types.v1.Document documents = 6;
}

// Gender Type
enum GenderType {
  GENDER_TYPE_UNSPECIFIED = 0;
  GENDER_TYPE_MALE = 1;
  GENDER_TYPE_FEMALE = 2;
  GENDER_TYPE_NONBINARY = 3;
  GENDER_TYPE_AGENDER = 4;
}
